<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.7"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CP264: Lab 6: src/queue_linked.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">CP264: Lab 6<span id="projectnumber">&#160;2023-10-05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.7 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('queue__linked_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">queue_linked.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &lt;string.h&gt;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;limits.h&gt;</code><br />
<code>#include &lt;assert.h&gt;</code><br />
<code>#include &quot;<a class="el" href="data_8h_source.htm">data.h</a>&quot;</code><br />
</div>
<p><a href="queue__linked_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structqueue__node.htm">queue_node</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:acf2bf85d56b5890cb2f39c40a90e368c"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structqueue__node.htm">queue_node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#acf2bf85d56b5890cb2f39c40a90e368c">queue_node</a></td></tr>
<tr class="separator:acf2bf85d56b5890cb2f39c40a90e368c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab8fc0639ce9c17cc97708f5e673cb698"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#ab8fc0639ce9c17cc97708f5e673cb698">queue_initialize</a> (<a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> **queue, <a class="el" href="data_8h.htm#adeddcc8bf4eb39d8334e0b2e8c0a7b66">data_type_copy</a> copy, <a class="el" href="data_8h.htm#a6e4017f53a4c7a90dae65dff97eadaa1">data_type_string</a> to_string, <a class="el" href="data_8h.htm#ad3922876dfa32650cc7eac9d4b138de3">data_type_destroy</a> destroy)</td></tr>
<tr class="separator:ab8fc0639ce9c17cc97708f5e673cb698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a636f81e4045ce99afbb8ee7d8122044d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#a636f81e4045ce99afbb8ee7d8122044d">queue_destroy</a> (<a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> **source)</td></tr>
<tr class="separator:a636f81e4045ce99afbb8ee7d8122044d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb57f1ab670a4e36eda310f93e6d696a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#afb57f1ab670a4e36eda310f93e6d696a">queue_empty</a> (const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source)</td></tr>
<tr class="separator:afb57f1ab670a4e36eda310f93e6d696a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e14f0198ce06bc5d9e32ee6a0a7c5b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#a87e14f0198ce06bc5d9e32ee6a0a7c5b">queue_full</a> (const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source)</td></tr>
<tr class="separator:a87e14f0198ce06bc5d9e32ee6a0a7c5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada8b7e745a070f3ace3b6dbc2f982108"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#ada8b7e745a070f3ace3b6dbc2f982108">queue_count</a> (const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source)</td></tr>
<tr class="separator:ada8b7e745a070f3ace3b6dbc2f982108"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaa4942ea113fe90d801fe50ec655b18"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#abaa4942ea113fe90d801fe50ec655b18">queue_insert</a> (<a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source, const <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *item)</td></tr>
<tr class="separator:abaa4942ea113fe90d801fe50ec655b18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4385afe172789d83a952176a37f21d8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#ae4385afe172789d83a952176a37f21d8">queue_peek</a> (const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source, <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *item)</td></tr>
<tr class="separator:ae4385afe172789d83a952176a37f21d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4c442fb1856d7a03e3c83c4091d7f2a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#ae4c442fb1856d7a03e3c83c4091d7f2a">queue_remove</a> (<a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source, <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *item)</td></tr>
<tr class="separator:ae4c442fb1856d7a03e3c83c4091d7f2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2357fae1f6edce3d54e75e4316ca164"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#ae2357fae1f6edce3d54e75e4316ca164">queue_print</a> (const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source)</td></tr>
<tr class="separator:ae2357fae1f6edce3d54e75e4316ca164"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f496fcc2bd84713c62065beb922ff12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#a4f496fcc2bd84713c62065beb922ff12">queue_combine</a> (<a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *target, <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source1, <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source2)</td></tr>
<tr class="separator:a4f496fcc2bd84713c62065beb922ff12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1d8dc793b85da4f93079fada2cc8988"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__linked_8h.htm#af1d8dc793b85da4f93079fada2cc8988">queue_split_alt</a> (<a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *target1, <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *target2, <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *source)</td></tr>
<tr class="separator:af1d8dc793b85da4f93079fada2cc8988"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><hr  />
<h2><a class="anchor" id="autotoc_md13"></a>
Linked Queue Header File</h2>
<dl class="section author"><dt>Author</dt><dd>David Brown, 123456789, <a href="#" onclick="location.href='mai'+'lto:'+'dbr'+'ow'+'n@w'+'lu'+'.ca'; return false;">dbrow<span class="obfuscator">.nosp@m.</span>n@wl<span class="obfuscator">.nosp@m.</span>u.ca</a></dd></dl>
<dl class="section version"><dt>Version</dt><dd>2023-10-08</dd></dl>
<hr  />
<p> DO NOT CHANGE CONTENTS </p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="acf2bf85d56b5890cb2f39c40a90e368c" name="acf2bf85d56b5890cb2f39c40a90e368c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf2bf85d56b5890cb2f39c40a90e368c">&#9670;&#160;</a></span>queue_node</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structqueue__node.htm">queue_node</a> <a class="el" href="structqueue__node.htm">queue_node</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Queue node. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a4f496fcc2bd84713c62065beb922ff12" name="a4f496fcc2bd84713c62065beb922ff12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f496fcc2bd84713c62065beb922ff12">&#9670;&#160;</a></span>queue_combine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_combine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Combines contents of two source queues into a target queue. Items alternate. Source queues are empty (not destroyed) when the function completes. Moves nodes, not data.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target</td><td>- pointer to target queue </td></tr>
    <tr><td class="paramname">source1</td><td>- pointer to first source queue </td></tr>
    <tr><td class="paramname">source2</td><td>- pointer to second source queue </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ada8b7e745a070f3ace3b6dbc2f982108" name="ada8b7e745a070f3ace3b6dbc2f982108"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada8b7e745a070f3ace3b6dbc2f982108">&#9670;&#160;</a></span>queue_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int queue_count </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns number of items in queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- number of items in queue. </dd></dl>

</div>
</div>
<a id="a636f81e4045ce99afbb8ee7d8122044d" name="a636f81e4045ce99afbb8ee7d8122044d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a636f81e4045ce99afbb8ee7d8122044d">&#9670;&#160;</a></span>queue_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> **&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroys a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afb57f1ab670a4e36eda310f93e6d696a" name="afb57f1ab670a4e36eda310f93e6d696a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb57f1ab670a4e36eda310f93e6d696a">&#9670;&#160;</a></span>queue_empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_empty </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if a queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if source is empty, false otherwise. </dd></dl>

</div>
</div>
<a id="a87e14f0198ce06bc5d9e32ee6a0a7c5b" name="a87e14f0198ce06bc5d9e32ee6a0a7c5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87e14f0198ce06bc5d9e32ee6a0a7c5b">&#9670;&#160;</a></span>queue_full()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_full </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if a queue is full.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if the queue is full, false otherwise. </dd></dl>

</div>
</div>
<a id="ab8fc0639ce9c17cc97708f5e673cb698" name="ab8fc0639ce9c17cc97708f5e673cb698"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8fc0639ce9c17cc97708f5e673cb698">&#9670;&#160;</a></span>queue_initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> **&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#adeddcc8bf4eb39d8334e0b2e8c0a7b66">data_type_copy</a>&#160;</td>
          <td class="paramname"><em>copy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a6e4017f53a4c7a90dae65dff97eadaa1">data_type_string</a>&#160;</td>
          <td class="paramname"><em>to_string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#ad3922876dfa32650cc7eac9d4b138de3">data_type_destroy</a>&#160;</td>
          <td class="paramname"><em>destroy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to the queue to initialize. </td></tr>
    <tr><td class="paramname">copy</td><td>- the data copy function </td></tr>
    <tr><td class="paramname">to_string</td><td>- the data to_string function </td></tr>
    <tr><td class="paramname">destroy</td><td>- the data destroy function </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abaa4942ea113fe90d801fe50ec655b18" name="abaa4942ea113fe90d801fe50ec655b18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaa4942ea113fe90d801fe50ec655b18">&#9670;&#160;</a></span>queue_insert()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inserts a copy of an item into a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to the item to push </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if item inserted, false otherwise </dd></dl>

</div>
</div>
<a id="ae4385afe172789d83a952176a37f21d8" name="ae4385afe172789d83a952176a37f21d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4385afe172789d83a952176a37f21d8">&#9670;&#160;</a></span>queue_peek()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_peek </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns a copy of the item at the front of a queue, queue is unchanged.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to a copy of the item to retrieve </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if item peeked, false otherwise (queue is empty) </dd></dl>

</div>
</div>
<a id="ae2357fae1f6edce3d54e75e4316ca164" name="ae2357fae1f6edce3d54e75e4316ca164"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2357fae1f6edce3d54e75e4316ca164">&#9670;&#160;</a></span>queue_print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_print </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Prints the items in a queue from front to rear. (For testing only).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae4c442fb1856d7a03e3c83c4091d7f2a" name="ae4c442fb1856d7a03e3c83c4091d7f2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4c442fb1856d7a03e3c83c4091d7f2a">&#9670;&#160;</a></span>queue_remove()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Removes and returns the item at the front of a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a queue </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to the item to remove </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if item popped, false otherwise (queue is empty) </dd></dl>

</div>
</div>
<a id="af1d8dc793b85da4f93079fada2cc8988" name="af1d8dc793b85da4f93079fada2cc8988"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1d8dc793b85da4f93079fada2cc8988">&#9670;&#160;</a></span>queue_split_alt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_split_alt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>target1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>target2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structqueue__linked__struct.htm">queue_linked_struct</a> *&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Splits a source queue alternately into two target queues. Items alternate. Source queue is empty (not destroyed) when function completes. Moves nodes, not data.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target1</td><td>- pointer to first target queue </td></tr>
    <tr><td class="paramname">target2</td><td>- pointer to second target queue </td></tr>
    <tr><td class="paramname">source</td><td>- pointer to source queue </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="queue__linked_8h.htm">queue_linked.h</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.7 </li>
  </ul>
</div>
</body>
</html>
