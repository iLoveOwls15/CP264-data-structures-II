<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.7"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CP264: Lab 8: src/avl_linked.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">CP264: Lab 8<span id="projectnumber">&#160;2024-03-03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.7 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('avl__linked_8c.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">avl_linked.c File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &quot;<a class="el" href="avl__linked_8h_source.htm">avl_linked.h</a>&quot;</code><br />
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a218fda02e3c76d7889603164559878e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a218fda02e3c76d7889603164559878e9">avl_initialize</a> ()</td></tr>
<tr class="separator:a218fda02e3c76d7889603164559878e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42d1fef4963c84bb8930301efead28c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a42d1fef4963c84bb8930301efead28c9">avl_free</a> (<a class="el" href="structavl__linked.htm">avl_linked</a> **source)</td></tr>
<tr class="separator:a42d1fef4963c84bb8930301efead28c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5e2e4e7e39bda7debd1b00688df145a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#ac5e2e4e7e39bda7debd1b00688df145a">avl_empty</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source)</td></tr>
<tr class="separator:ac5e2e4e7e39bda7debd1b00688df145a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4b510535b581c7966fb637e14446a40"><td class="memItemLeft" align="right" valign="top"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#ad4b510535b581c7966fb637e14446a40">avl_full</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source)</td></tr>
<tr class="separator:ad4b510535b581c7966fb637e14446a40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae57090b13d4e91d063a11904c30e3b4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#aae57090b13d4e91d063a11904c30e3b4">avl_count</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source)</td></tr>
<tr class="separator:aae57090b13d4e91d063a11904c30e3b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1fd15fc8fa5078325b724066411a101"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#ac1fd15fc8fa5078325b724066411a101">avl_inorder</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *items)</td></tr>
<tr class="separator:ac1fd15fc8fa5078325b724066411a101"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfd4314b277ad2c9a0b8c96092e504c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#abfd4314b277ad2c9a0b8c96092e504c1">avl_preorder</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *items)</td></tr>
<tr class="separator:abfd4314b277ad2c9a0b8c96092e504c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab54f807bd304760ced088759a9026798"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#ab54f807bd304760ced088759a9026798">avl_postorder</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *items)</td></tr>
<tr class="separator:ab54f807bd304760ced088759a9026798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a948e3e61df7c2e44e7907c09a8768c56"><td class="memItemLeft" align="right" valign="top"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a948e3e61df7c2e44e7907c09a8768c56">avl_insert</a> (<a class="el" href="structavl__linked.htm">avl_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> item)</td></tr>
<tr class="separator:a948e3e61df7c2e44e7907c09a8768c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3513d47d46988a53568f0067884d475b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a3513d47d46988a53568f0067884d475b">avl_retrieve</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> key, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> item)</td></tr>
<tr class="separator:a3513d47d46988a53568f0067884d475b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c19d671c602d9b0bd803a2b2769e628"><td class="memItemLeft" align="right" valign="top"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a0c19d671c602d9b0bd803a2b2769e628">avl_remove</a> (<a class="el" href="structavl__linked.htm">avl_linked</a> *source, const <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> key, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> item)</td></tr>
<tr class="separator:a0c19d671c602d9b0bd803a2b2769e628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27b7354d7ad2339a38d061ae3f4c2b70"><td class="memItemLeft" align="right" valign="top"><a class="el" href="avl__linked_8h.htm#a0309ee1cd3187365a87f3ec31cdfcab6">AVL_ERROR</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a27b7354d7ad2339a38d061ae3f4c2b70">avl_valid</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source)</td></tr>
<tr class="separator:a27b7354d7ad2339a38d061ae3f4c2b70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5daaf47794919d1d66483f5f19c7dde7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a5daaf47794919d1d66483f5f19c7dde7">avl_equals</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *target, const <a class="el" href="structavl__linked.htm">avl_linked</a> *source)</td></tr>
<tr class="separator:a5daaf47794919d1d66483f5f19c7dde7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee29acd68bdf2874982450eefeaafc1"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a5ee29acd68bdf2874982450eefeaafc1">avl_error_string</a> (char *string, size_t size, <a class="el" href="avl__linked_8h.htm#a0309ee1cd3187365a87f3ec31cdfcab6">AVL_ERROR</a> error)</td></tr>
<tr class="separator:a5ee29acd68bdf2874982450eefeaafc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c8c077dc75e66afd1dfcbd43d77961d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="avl__linked_8c.htm#a6c8c077dc75e66afd1dfcbd43d77961d">avl_print</a> (const <a class="el" href="structavl__linked.htm">avl_linked</a> *source)</td></tr>
<tr class="separator:a6c8c077dc75e66afd1dfcbd43d77961d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><hr  />
<h2><a class="anchor" id="autotoc_md1"></a>
Linked AVL Source Code File</h2>
<dl class="section author"><dt>Author</dt><dd>David Brown, 123456789, <a href="#" onclick="location.href='mai'+'lto:'+'dbr'+'ow'+'n@w'+'lu'+'.ca'; return false;">dbrow<span class="obfuscator">.nosp@m.</span>n@wl<span class="obfuscator">.nosp@m.</span>u.ca</a></dd></dl>
<dl class="section version"><dt>Version</dt><dd>2024-03-01</dd></dl>
<hr  />
 </div><h2 class="groupheader">Function Documentation</h2>
<a id="aae57090b13d4e91d063a11904c30e3b4" name="aae57090b13d4e91d063a11904c30e3b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae57090b13d4e91d063a11904c30e3b4">&#9670;&#160;</a></span>avl_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int avl_count </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns number of items in a AVL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- number of items in AVL </dd></dl>

</div>
</div>
<a id="ac5e2e4e7e39bda7debd1b00688df145a" name="ac5e2e4e7e39bda7debd1b00688df145a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5e2e4e7e39bda7debd1b00688df145a">&#9670;&#160;</a></span>avl_empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a> avl_empty </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if a AVL is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TRUE if the AVL is empty, FALSE otherwise </dd></dl>

</div>
</div>
<a id="a5daaf47794919d1d66483f5f19c7dde7" name="a5daaf47794919d1d66483f5f19c7dde7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5daaf47794919d1d66483f5f19c7dde7">&#9670;&#160;</a></span>avl_equals()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a> avl_equals </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if two trees contain same data in same configuration.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target</td><td>- pointer to a AVL </td></tr>
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if target is identical to source, FALSE otherwise </dd></dl>

</div>
</div>
<a id="a5ee29acd68bdf2874982450eefeaafc1" name="a5ee29acd68bdf2874982450eefeaafc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ee29acd68bdf2874982450eefeaafc1">&#9670;&#160;</a></span>avl_error_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * avl_error_string </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="avl__linked_8h.htm#a0309ee1cd3187365a87f3ec31cdfcab6">AVL_ERROR</a>&#160;</td>
          <td class="paramname"><em>error</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns a string version of an AVL error.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">string</td><td>- destination string </td></tr>
    <tr><td class="paramname">size</td><td>- maximum size of destination string </td></tr>
    <tr><td class="paramname">source</td><td>- pointer to source data </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- pointer to string </dd></dl>

</div>
</div>
<a id="a42d1fef4963c84bb8930301efead28c9" name="a42d1fef4963c84bb8930301efead28c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42d1fef4963c84bb8930301efead28c9">&#9670;&#160;</a></span>avl_free()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void avl_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structavl__linked.htm">avl_linked</a> **&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Frees all parts of a AVL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad4b510535b581c7966fb637e14446a40" name="ad4b510535b581c7966fb637e14446a40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4b510535b581c7966fb637e14446a40">&#9670;&#160;</a></span>avl_full()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a> avl_full </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if a AVL is full.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if the AVL is full, FALSE otherwise </dd></dl>

</div>
</div>
<a id="a218fda02e3c76d7889603164559878e9" name="a218fda02e3c76d7889603164559878e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a218fda02e3c76d7889603164559878e9">&#9670;&#160;</a></span>avl_initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structavl__linked.htm">avl_linked</a> * avl_initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes a AVL.</p>
<dl class="section return"><dt>Returns</dt><dd>pointer to a AVL </dd></dl>

</div>
</div>
<a id="ac1fd15fc8fa5078325b724066411a101" name="ac1fd15fc8fa5078325b724066411a101"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1fd15fc8fa5078325b724066411a101">&#9670;&#160;</a></span>avl_inorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void avl_inorder </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *&#160;</td>
          <td class="paramname"><em>items</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copies the contents of a AVL to an array in inorder.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
    <tr><td class="paramname">items</td><td>- array of items: length must be at least size of AVL </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a948e3e61df7c2e44e7907c09a8768c56" name="a948e3e61df7c2e44e7907c09a8768c56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a948e3e61df7c2e44e7907c09a8768c56">&#9670;&#160;</a></span>avl_insert()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a> avl_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inserts a copy of an item into a AVL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL Pointer to a AVL. </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to the item to push </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if item inserted, FALSE otherwise </dd></dl>

</div>
</div>
<a id="ab54f807bd304760ced088759a9026798" name="ab54f807bd304760ced088759a9026798"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab54f807bd304760ced088759a9026798">&#9670;&#160;</a></span>avl_postorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void avl_postorder </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *&#160;</td>
          <td class="paramname"><em>items</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copies the contents of a tree to an array in postorder.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
    <tr><td class="paramname">items</td><td>- array of items: length must be at least size of AVL </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abfd4314b277ad2c9a0b8c96092e504c1" name="abfd4314b277ad2c9a0b8c96092e504c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfd4314b277ad2c9a0b8c96092e504c1">&#9670;&#160;</a></span>avl_preorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void avl_preorder </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *&#160;</td>
          <td class="paramname"><em>items</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copies the contents of a AVL to an array in preorder.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
    <tr><td class="paramname">items</td><td>- array of items: length must be at least size of AVL </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6c8c077dc75e66afd1dfcbd43d77961d" name="a6c8c077dc75e66afd1dfcbd43d77961d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c8c077dc75e66afd1dfcbd43d77961d">&#9670;&#160;</a></span>avl_print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void avl_print </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Prints the items in a AVL in preorder.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0c19d671c602d9b0bd803a2b2769e628" name="a0c19d671c602d9b0bd803a2b2769e628"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c19d671c602d9b0bd803a2b2769e628">&#9670;&#160;</a></span>avl_remove()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a> avl_remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Removes a value matching key in a AVL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
    <tr><td class="paramname">key</td><td>- key value to search for </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to the item removed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if item removed, FALSE otherwise (key not found) </dd></dl>

</div>
</div>
<a id="a3513d47d46988a53568f0067884d475b" name="a3513d47d46988a53568f0067884d475b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3513d47d46988a53568f0067884d475b">&#9670;&#160;</a></span>avl_retrieve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="data_8h.htm#a4b159ab7d9637f4ccd0d99f6e6aea738">BOOLEAN</a> avl_retrieve </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a copy of a value matching key in a AVL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
    <tr><td class="paramname">key</td><td>- key value to search for </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to copy of the item retrieved </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if item retrieved, FALSE otherwise (key not found) </dd></dl>

</div>
</div>
<a id="a27b7354d7ad2339a38d061ae3f4c2b70" name="a27b7354d7ad2339a38d061ae3f4c2b70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27b7354d7ad2339a38d061ae3f4c2b70">&#9670;&#160;</a></span>avl_valid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="avl__linked_8h.htm#a0309ee1cd3187365a87f3ec31cdfcab6">AVL_ERROR</a> avl_valid </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structavl__linked.htm">avl_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines whether or not source is a valid AVL.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a AVL </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- error value </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="avl__linked_8c.htm">avl_linked.c</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.7 </li>
  </ul>
</div>
</body>
</html>
